# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- development

resources:
- repo: self

# variables:
# - group: mchdevdocker


stages:
# - stage: Pre_Build
#   displayName: code testing through sonarqube 
#   pool: 
#     vmImage: $(vmImageName)
#   jobs:
#   - job: Pre_build
#     steps:
#     - task: SonarQubePrepare@4
#       inputs:
#         SonarQube: 'SonarQube'
#         scannerMode: 'CLI'
#         configMode: 'manual'
#         cliProjectKey: 'MyCanopyHealth_WEB'
#         cliProjectName: 'WEB'
#         cliSources: '.'
#     - task: SonarQubeAnalyze@4
#       displayName: 'Run Code Analysis'

#     - task: SonarQubePublish@4
#       inputs:
#         pollingTimeoutSec: '3000'

- stage: Pre_Build
  displayName: Code Analysis
  jobs:
  - job: Pre_build
    displayName: Code Analysis
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'sonarcloud'
        organization: 'mycanopyhealth'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'MyCanopyHealth_WEB'
        cliProjectName: 'WEB'
        cliSources: '.'
    - task: SonarCloudAnalyze@1
    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '600'

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
            # Write your commands here
            mv .env-$(Build.SourceBranchName) .env
        workingDirectory: '$(Build.SourcesDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

# - stage: Build
  
#   displayName: Build and push stage
#   jobs:
#   - job: Build
#     displayName: Build
#     pool:
#       vmImage: 'ubuntu-latest'
#     steps:
#     - task: Docker@2
#       displayName: Build and push an image to container registry
#       inputs:
#         command: buildAndPush
#         repository: $(WEBimageRepository)
#         dockerfile: $(dockerfilePath)
#         containerRegistry: $(dockerRegistryServiceConnection)
#         tags: |
#           $(tag)
#     - task: AzureRmWebAppDeployment@4
#       inputs:
#         ConnectionType: 'AzureRM'
#         azureSubscription: 'Canopy(5e8da90a-9277-42a2-99fb-eaf752927ab8)'
#         appType: 'webAppContainer'
#         WebAppName: 'svamweb'
#         DockerNamespace: '$(containerRegistry)'
#         DockerRepository: '$(WEBimageRepository)'
#         DockerImageTag: '$(tag)'
#         AppSettings: '-DOCKER_REGISTRY_SERVER_USERNAME "$(DOCKER_REGISTRY_SERVER_USERNAME)" -DOCKER_REGISTRY_SERVER_PASSWORD "$(DOCKER_REGISTRY_SERVER_PASSWORD)"'



