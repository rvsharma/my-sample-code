
@mixin respond-to($breakpoint) {
    @if $breakpoint=="max-small" {
        @media (max-width: 766px) {
            @content;
        }
    }
    @else if $breakpoint=="small" {
        @media (min-width: 767px) {
            @content;
        }
    }
    @else if $breakpoint=="medium" {
        @media (min-width: 992px) {
            @content;
        }
    }
    @else if $breakpoint=="max-medium" {
        @media (max-width: 991px) {
            @content;
        }
    }
    @else if $breakpoint=="large" {
        @media (min-width: 1200px) {
            @content;
        }
    }
}

@function str-replace($string, $search, $replace: "") {
    $index: str-index($string, $search);
    @if $index {
        @return str-slice($string, 1, $index - 1)+$replace+str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }
    @return $string;
}

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
    $src: null;
    $extmods: ( eot: "?", svg: "#" + str-replace($name, " ", "_"));
    $formats: ( otf: "opentype", ttf: "truetype");
    @each $ext in $exts {
        $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
        $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
        $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
    }
    @font-face {
        font-family: quote($name);
        font-style: $style;
        font-weight: $weight;
        src: $src;
    }
}

@mixin center-horizontal-top-offset($topOffSet) {
    position: absolute;
    left: 50%;
    top: $topOffSet;
    transform: translate(-50%, -50%);
}